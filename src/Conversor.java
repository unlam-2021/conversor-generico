
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author flescano
 */
public class Conversor extends javax.swing.JFrame {

    /**
     * Creates new form Conversor
     */
    public Conversor() {
        initComponents();
        setTitle("Conversor Generico");
        setLocationRelativeTo(null);
        
        // Agregamos las posibles opciones al combobox.
        for (String option : converterController.getOptions()) {
            jComboBoxMedidas.addItem(option);
        }
        
        setLabels();
    }
    
    // Cambia los lables segun lo que este seleccionado en el combobox.
    private void setLabels() {
       String selectedOption = (String) jComboBoxMedidas.getSelectedItem();
       Labels labels = converterController.getCLabels(selectedOption);
       jLabelArriba.setText(labels.getArriba());
       jLabelAbajo.setText(labels.getAbajo());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxMedidas = new javax.swing.JComboBox<>();
        jTextFieldArriba = new javax.swing.JTextField();
        jTextFieldAbajo = new javax.swing.JTextField();
        jButtonConvertir = new javax.swing.JButton();
        jLabelArriba = new javax.swing.JLabel();
        jLabelAbajo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBoxMedidas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxMedidasItemStateChanged(evt);
            }
        });

        jTextFieldArriba.setText("0.0");
        jTextFieldArriba.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldArribaKeyPressed(evt);
            }
        });

        jTextFieldAbajo.setText("0.0");
        jTextFieldAbajo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldAbajoKeyPressed(evt);
            }
        });

        jButtonConvertir.setText("Convertir");
        jButtonConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConvertirActionPerformed(evt);
            }
        });

        jLabelArriba.setText("jLabel1");

        jLabelAbajo.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxMedidas, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabelArriba, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldArriba, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabelAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jButtonConvertir)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jComboBoxMedidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldArriba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelArriba))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAbajo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jButtonConvertir)
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConvertirActionPerformed
        convert();
    }//GEN-LAST:event_jButtonConvertirActionPerformed

    private void jTextFieldArribaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldArribaKeyPressed
        if(!convertTo){
            // Si escribe al menos un caracter en el field de arriba entonces quiere hacer el camino "standard"
            convertTo = true;
            cleanField(jTextFieldAbajo);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // Enter was pressed. Your code goes here.
            convert();
        }
    }//GEN-LAST:event_jTextFieldArribaKeyPressed

    private void jTextFieldAbajoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAbajoKeyPressed
        if(convertTo) {
            // Si escribio al menos un caracter en el field de abajo entonces quire hacer el camino inveso.
            convertTo = false;
            cleanField(jTextFieldArriba);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // Enter was pressed. Your code goes here.
            convert();
        }
    }//GEN-LAST:event_jTextFieldAbajoKeyPressed

    private void jComboBoxMedidasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxMedidasItemStateChanged
        setLabels();
    }//GEN-LAST:event_jComboBoxMedidasItemStateChanged

    public void cleanField(javax.swing.JTextField field) {
        field.setText("");
    }
    
    public void convert() {
        // Tomamos el item seleccionado
        String item = (String) jComboBoxMedidas.getSelectedItem();
        
        // Buscamo el converter especifico para esa opcion.
        Converter converter = converterController.getConverter(item);
        
        Double originalValue;
        Double convertedValue;
        
        // Dependiendo del flag convertimo para uno u otro lado
        if(convertTo) {
            originalValue = getDoubleFromField(jTextFieldArriba);
            convertedValue = converter.convertTo(originalValue);
            jTextFieldAbajo.setText(String.format("%.2f", convertedValue));
        } else {
            originalValue = getDoubleFromField(jTextFieldAbajo);
            convertedValue = converter.converFrom(originalValue);
            jTextFieldArriba.setText(String.format("%.2f", convertedValue));
        }
    }
    
    // Siempre retorna un valor, cuando hay un error 0.0. 
    public Double getDoubleFromField(javax.swing.JTextField field) {
        Double parsedValue = 0D;
        
        // Sacamos espacios, reemplazamos la coma y pasamos a mayusculas para validar.
        String fieldText = field.getText().trim().replace(",", ".").toUpperCase();
        
        if(fieldText.contains("D") || fieldText.contains("F")) {
            showError();
            return parsedValue;
        }
        
        try {
            parsedValue = Double.parseDouble(fieldText);
        } catch (NumberFormatException e) {
            showError();
        }
        
        return parsedValue;
    }
    
    public void showError() {
        JOptionPane.showMessageDialog(this, "Eso parece no ser un numero", "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Conversor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConvertir;
    private javax.swing.JComboBox<String> jComboBoxMedidas;
    private javax.swing.JLabel jLabelAbajo;
    private javax.swing.JLabel jLabelArriba;
    private javax.swing.JTextField jTextFieldAbajo;
    private javax.swing.JTextField jTextFieldArriba;
    // End of variables declaration//GEN-END:variables
    private ConverterController converterController = new ConverterController();
    private Boolean convertTo = true;

}
